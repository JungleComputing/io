<project name="ibis-io" default="build" basedir=".">
	<description>
    		Build file for ibis-io
	</description>
  
	<!-- Global properties -->
	<target name="properties" description="Setup all the properties for building">
    	<property name="src" location="src" />
		<property name="tmp" location="tmp" />
		<property name="tmpsrc" location="tmpsrc" />
		<property name="lib" location="lib" />
		<property name="res" location="res" />
		<property name="javadoc" location="javadoc" />
		<property name="external" location="external" />
		<property name="sources" value="sources" />
		
		<property name="version" value="-2.1.1" />
		
		<property name="jar" location="${lib}/${ant.project.name}${version}.jar" />
		<property name="sources-filename" value="${ant.project.name}${version}" />
		
		<path id="external_jars">
    		<fileset dir="${external}">
				<include name="*.jar" />
				<exclude name="log4jME*.jar" />
				<exclude name="j2meunit*.jar" />
				<exclude name="antenna-*.jar" />
			</fileset>
		</path>
      
	</target>
  
	<target name="properties-jme" description="Set all the properties for JME building" depends="properties">
    	<property name="jmejar" location="${lib}/${ant.project.name}-jme${version}.jar" />
		<property name="jme-sources-filename" value="${ant.project.name}-jme${version}" />
		
		<!-- Setup antenna for building the JME stuff -->
		<taskdef resource="antenna.properties" classpath="${external}/antenna-bin-1.0.0.jar"/>
		<!-- What versions of JME we target. This is the minimum we can support. -->
		<property name="wtk.cldc.version" value="1.1"/>
		<property name="wtk.midp.version" value="2.0"/>
		<property name="wtk.optionalpda.enabled" value="true" />
		
		<property name="jmejavadoc" location="jmejavadoc" />
    
		<!-- Jars used for building JME version -->
		<path id="jme_build_jars">
			<fileset dir="${external}">
				<include name="log4jME*.jar" />
				<include name="j2meunit*.jar" />
			</fileset>
		</path>
		
		<path id="jme_rewrite_jars">
			<fileset dir="${external}">
				<include name="ibis*.jar" />
				<include name="bcel*.jar" />
				<include name="log4jME*.jar" />
			</fileset>
			<pathelement path="${lib}/${jar}" />
		</path>
    
		<!-- Check the WTK environment variable -->
		
		<property environment="env"/>
		<property name="wtk.home" value="${env.WTK_HOME}"/>
		<available property="wtk.exists" file="${env.WTK_HOME}" />
		<fail unless="wtk.exists" message="Please set WTK_HOME in your environment to the location of your Wireless Toolkit installation." />
    
		<!-- Should we preverify the rsulting jar? -->
		<property name="wtk.preverify" value="true" />
		
	</target>
  
	<target name="build" description="Build the ibis-io distribution." depends="build-jse,build-jme" />
	
	<target name="build-jse" description="Build the standard edition version of ibis-io" depends="clean">
    	<!-- Create the time stamp -->
		<tstamp />
		
		<!-- Create the build directory structure used by compile -->
		<delete dir="${tmp}" />
		<delete dir="${javadoc}" />
		
		<mkdir dir="${tmp}" />
		<mkdir dir="${tmpsrc}" />
		<mkdir dir="${lib}" />
		<mkdir dir="${javadoc}" />
		<mkdir dir="${sources}" />
		
		<!-- Collect all the source into one place. -->
		<copy todir="${tmpsrc}">
			<fileset dir="${src}"
					 excludes="ibis/io/jme/**,ibis/io/test/**"
					 />
		</copy>
		
		<!-- Compile the java code from ${src} into ${tmp} -->
		<javac srcdir="${tmpsrc}" destdir="${tmp}" debug="on">
			<classpath refid="external_jars" />
			<compilerarg value="-Xlint:unchecked" />
		</javac>
    
		<!-- Create the distribution directory -->
		<mkdir dir="${lib}" />
    
    
		<!-- create the javadoc -->
		<javadoc destdir="${javadoc}" access="public">
			<packageset dir="${tmpsrc}" />
			<classpath refid="external_jars" />
			<link href="http://logging.apache.org/log4j/docs/api/" />
			<link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
		</javadoc>
    
		<!-- Put everything in ${tmp} into the jar file -->
		<jar jarfile="${jar}" basedir="${tmp}">
			<manifest>
				<attribute name="Ibisc-Component" value="ibis.io.rewriter.IOGenerator"/>
			</manifest>
		</jar>
		
		<!-- create a zip file with the sources -->
		<zip destfile="${sources}/${sources-filename}.zip">
			<zipfileset dir="${tmpsrc}"
						includes="**/*.java"
						prefix="${sources-filename}" />
			<zipfileset dir="."
						includes="LICENSE.txt"
						prefix="${sources-filename}" />
		</zip>
    
		<!-- And delete the build dir -->
		<delete dir="${tmp}" />
		<delete dir="${tmpsrc}" />
	</target>
	
	<target name="build-jme" depends="build-jse,properties-jme" description="Build the micro edition version of ibis-io">
    
    	<!-- Create the time stamp -->
		<tstamp />
		
		<!-- Create the build directory structure used by compile -->
		<delete dir="${tmpsrc}" />
		<delete dir="${tmp}" />
		<delete dir="${jmejavadoc}" />
		
		<mkdir dir="${tmp}" />
		<mkdir dir="${tmpsrc}" />
		<mkdir dir="${lib}" />
		<mkdir dir="${jmejavadoc}" />
		<mkdir dir="${sources}" />
		
		<!-- Collect all the source into one place. 
    		 This is required since wtkbuild doesn't respect includes 
			 properly -->
		<copy todir="${tmpsrc}">
			<fileset dir="${src}"
    				 includes="ibis/io/SerializationInput.*,ibis/io/SerializationOutput.*,ibis/io/DataInput.*,ibis/io/DataOutput.*,ibis/io/Replacer.*,ibis/io/jme/**" 
    				 />
		</copy>
    
        <!-- create the javadoc -->
        <javadoc destdir="${jmejavadoc}" access="public">
        	<packageset dir="${tmpsrc}">
            	<include name="ibis/io/jme/**"/>
			</packageset>
			<classpath refid="jme_build_jars" />
			<link href="http://logging.apache.org/log4j/docs/api/" />
			<link href="http://java.sun.com/javame/reference/apis/jsr139/" />
			<link href="http://java.sun.com/javame/reference/apis/jsr118/" />
        </javadoc>
    	
        <!-- Compile the java code from ${tmpsrc} into ${tmp} -->
    	<wtkbuild srcdir="${tmpsrc}"
    			  source="1.3" debug="off" target="1.3" 
				  destdir="${tmp}" preverify="${wtk.preverify}">
    		<classpath refid="jme_build_jars" />
    	</wtkbuild>   	
    	
        <!-- Create the distribution directory -->
        <mkdir dir="${lib}" />
		
        <!-- Put everything in ${tmp} into the jar file -->
        <jar jarfile="${jmejar}" basedir="${tmp}">
			<manifest>
				<attribute name="Ibisc-Component" value="ibis.io.rewriter.IOGenerator"/>
			</manifest>
		</jar>
	
        <!-- create a zip file with the sources -->
        <zip destfile="${sources}/${jme-sources-filename}.zip">
        	<zipfileset dir="${tmpsrc}"
						includes="**/*.java"
						prefix="${jme-sources-filename}" />
			<zipfileset dir="."
						includes="LICENSE.txt"
						prefix="${jme-sources-filename}" />
        </zip>
	
        <!-- And delete the build dir -->
        <delete dir="${tmp}" />
    	<delete dir="${tmpsrc}" />
	</target>
  
	<target name="clean" description="clean up" depends="properties">
    	<delete dir="${lib}" />
		<delete dir="${tmp}" />
		<delete dir="${tmpsrc}" />
		<delete dir="${javadoc}" />
		<delete dir="${sources}" />
		<delete dir="${jmejavadoc}" />
	</target>

</project>
